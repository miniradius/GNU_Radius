@c This is part of the Radius manual.
@c Copyright (C) 1999,2000,2001,2002,2003,2004 Free Software Foundation, Inc.
@c Written by Sergey Poznyakoff
@c See file radius.texi for copying conditions.
@comment *******************************************************************
@node Radctl, Builddbm, Radauth, Utility Programs
@section @command{radctl}
@pindex radctl

@command{Radctl} is a control interface to the @command{radiusd}
daemon. It allows the
user running it to query @command{radiusd} about various aspects of its
work and to issue administrative commands to it. The syntax is

@smallexample
radctl @var{command} [@var{args}]
@end smallexample

@noindent
where @var{command} is a command telling @command{radctl} which actions to
take, and @var{args} are optional arguments to the command. Only one
command can be specified per invocation.

The valid commands are as follows:

@table @code

@item start [@var{args}]
If @command{radiusd} is not running already, it is started. When
present, @var{args} are passed as the command line to the
server.

@item stop
Stops running @command{radiusd}.

@item restart [@var{args}]
Stops the server and then starts it again. When present, @var{args}
are passed as the command line to the server.

@item reload
Causes the running @command{radiusd} server to reread its configuration files.

@item dumpdb
Tells @command{radiusd} to dump its user hash table into the file
@file{@var{radlog}/radius.parse}. This can be used for debugging 
configuration files.

@c @item status
@c @command{radiusd} reports its memory usage statistics. The information is
@c logged at the @code{Info} log level.

@item status
@itemx which
This command shows the line of @command{ps(1)} describing the running copy
of @command{radiusd} program. The exact look depends on the version of
operating system you are running. Please refer to ``man ps'' for more
detail on @command{ps} output.

Here is an example of what @command{radctl status} prints on
@code{GNU/Linux}:

@smallexample
19692 ?        01:53:11 radiusd
@end smallexample

Here, first field is the @acronym{PID} of the process, second field
(@samp{?}) indicates that the running program has detached from the
controlling terminal, the third field gives total amount of
@acronym{CPU} time used by the program, and, finally, the last field
shows the full name under which the command was invoked.
@end table




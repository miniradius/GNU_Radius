# -*- radius -*-
# This file is part of GNU Radius test suite.
# Copyright (C) 2000,2001,2003,2007 Free Software Foundation, Inc.
#
# Written by Sergey Poznyakoff
#
# GNU Radius is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# GNU Radius is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radius; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. 

# Begin.exp: Check for BEGIN pattern
BEGIN   NAS-IP-Address = 127.0.0.2
	Framed-IP-Address = 127.10.0.1+,
		Fall-Through = Yes

# Default.exp: Check for DEFAULT pattern
DEFAULT NAS-IP-Address = 127.0.0.3,
		Auth-Type = Accept
	Reply-Message = "OK. Come in."

DEFAULT NAS-IP-Address = 127.0.0.4,
		Auth-Type = Reject
	Reply-Message = "Wrong NAS"
	
## Auth.exp: Test Authentication Types
accept  Auth-Type = Accept     NULL 
reject  Auth-Type = Reject     NULL
local   Auth-Type = Local,
		User-Password = "guessme"
	NULL
crypt   Auth-Type = Crypt-Local,
		User-Password = "$1$gHpfo$0BuBYjWmmM6E4l00ZFqVI1" # hamlet
	NULL

chap	Auth-Type = Local,
		User-Password = "test"
	NULL

## Access.exp: bad-one should be rejected.
bad-one Auth-Type = Accept     NULL

## Expiration.exp
expire  Auth-Type = Local,
               User-Password = "expire",
               Expiration = "Jan 01 1971"
       Service-Type = Framed-User

no-expire  Auth-Type = Local,
               User-Password = "expire",
               Expiration = "Jan 01 2011"
       Service-Type = Framed-User

		
## Reply.exp: Test Reply Attributes
reply   Auth-Type = Local,
		User-Password = "guessme"
	Service-Type = Framed-User,
		Framed-Protocol = PPP
		
framed-ip Auth-Type = Accept
	Service-Type = Framed-User,
		Framed-Protocol = PPP,
		Framed-IP-Address = 127.0.0.1+

## Menu.exp: Test Livingston menus
menu    Auth-Type = Accept
	Menu = "menu1"

## Acct-{on|off}.exp: Test simultaneous use
simuse  Auth-Type = Accept,
		Simultaneous-Use = 1
	Service-Type = Framed-User

## Execwait.exp: Check for working Exec-Program-Wait attribute
execwait Auth-Type = Accept
	Exec-Program-Wait = "@BUILDDIR@/raddb/auth.bin %C{NAS-Port-Id} %C{User-Name}"

execwait1 Auth-Type = Accept
	  Service-Type = Framed-User,
		Exec-Program-Wait = "@BUILDDIR@/raddb/ascend.bin"
		
execwaitr Auth-Type = Accept
	Exec-Program-Wait = "=\"@BUILDDIR@/raddb/auth.bin \" + (string)%[NAS-Port-Id] + \" \" + %[User-Name]"

# Match.exp: Check for working Match-Profile attributes		
REQ0    NAS-Identifier = "en"
	Framed-IP-Address = 127.10.10.1
REQ0    NAS-Identifier = "to"
	Framed-IP-Address = 127.10.10.2

REQ1    NAS-IP-Address = 127.0.0.1,
		NAS-Port-Id = 1
	Framed-Protocol = PPP,
		Match-Profile = REQ0

match1  Auth-Type = Accept,
		Match-Profile = REQ1
	Service-Type = Framed-User
		
## Scheme-auth.exp: Check for working scheme authentication
scheme  Auth-Type = Accept
	Scheme-Procedure = "auth"

## Hint.exp
hint    Hint = "1",
		Auth-Type = Accept
        Reply-Message = "Hint 1"

hint    Hint = "2",
		Auth-Type = Accept
	Reply-Message = "Hint 2"

hint    Auth-Type = Reject
	Reply-Message = "No suffix"

## Rewrite.exp

rewrite_max   NAS-Port-Id = 43,
		Auth-Type = Accept
	      Reply-Message = "OK"

rewrite_nt    Auth-Type = Accept
	      Reply-Message = "OK"

rewrite_jetstream  Auth-Type = Accept
	      Reply-Message = "OK"

rewrite_cisco NAS-Port-Id = 123,
		Auth-Type = Accept,
		Acct-Session-Id = "120104",
		Voip-Connection-ID = "1B22539E 86E6603F 0 19C974C0",
		Voip-Call-Leg-Type = "answer",
		Voip-Connection-Type = "Telephony"
	      Reply-Message = "OK"

## Filter.exp

filter-ok  Auth-Type = Accept
	   Exec-Program-Wait = "|filter"

filter-bad Auth-Type = Accept
	   Exec-Program-Wait = "|filter"

frw-ok     Auth-Type = Accept
	   Exec-Program-Wait = "|filter_rw" 		

frw-bad    Auth-Type = Accept
	   Exec-Program-Wait = "|filter_rw"

# Tunnel attributes
tunnel 	   Auth-Type = Local,
		User-Password = test
	   Service-Type = Framed-User,
		Framed-Protocol = PPTP,
		Tunnel-Password = tUnnEl

# Tunnel attributes
tunnel 	   Auth-Type = Local,
		User-Password = test
	   Service-Type = Framed-User,
		Framed-Protocol = PPTP,
		Tunnel-Password = tUnnEl

# Test for Log-Mode-Mask bug
log-mode-mask Auth-Type = Local,
		User-Password = test,
		Log-Mode-Mask = Log-All
	Service-Type = Framed-User,
		Framed-Protocol = PPP

vsa-propagation	Auth-Type = Accept
		Cisco-AVPair = "variable=value"

# End of users.in
